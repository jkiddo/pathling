Index.PACKAGES = {"au.csiro.pathling.schema" : [{"name" : "au.csiro.pathling.schema.ChildCtx", "shortDescription" : "The visitor context representing a HAPI Child definition.", "members_case class" : [{"label" : "proceed", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.ChildCtx.proceed", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#proceed(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.ChildCtx.accept", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "def"}, {"member" : "au.csiro.pathling.schema.ChildCtx#<init>", "error" : "unsupported entity"}, {"label" : "compositeDefinition", "tail" : ": BaseRuntimeElementCompositeDefinition[_]", "member" : "au.csiro.pathling.schema.ChildCtx.compositeDefinition", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]", "kind" : "val"}, {"label" : "childDefinition", "tail" : ": BaseRuntimeChildDefinition", "member" : "au.csiro.pathling.schema.ChildCtx.childDefinition", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ChildCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/schema\/ChildCtx.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.schema.ChoiceChildCtx", "shortDescription" : "The visitor context representing a HAPI Choice child definition.", "members_case class" : [{"label" : "visitChildren", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[Seq[SF]]", "member" : "au.csiro.pathling.schema.ChoiceChildCtx.visitChildren", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#visitChildren(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[Seq[SF]]", "kind" : "def"}, {"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.ChoiceChildCtx.accept", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "def"}, {"member" : "au.csiro.pathling.schema.ChoiceChildCtx#<init>", "error" : "unsupported entity"}, {"label" : "compositeDefinition", "tail" : ": BaseRuntimeElementCompositeDefinition[_]", "member" : "au.csiro.pathling.schema.ChoiceChildCtx.compositeDefinition", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]", "kind" : "val"}, {"label" : "choiceChildDefinition", "tail" : ": RuntimeChildChoiceDefinition", "member" : "au.csiro.pathling.schema.ChoiceChildCtx.choiceChildDefinition", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#choiceChildDefinition:ca.uhn.fhir.context.RuntimeChildChoiceDefinition", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/schema\/ChoiceChildCtx.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.schema.CompositeCtx", "shortDescription" : "The visitor context representing a HAPI Composite definition.", "members_case class" : [{"label" : "toChildCtx", "tail" : "(childDefinition: BaseRuntimeChildDefinition): ChildCtx[DT, SF]", "member" : "au.csiro.pathling.schema.CompositeCtx.toChildCtx", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#toChildCtx(childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition):au.csiro.pathling.schema.ChildCtx[DT,SF]", "kind" : "def"}, {"label" : "visitChildren", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.CompositeCtx.visitChildren", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#visitChildren(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): DT", "member" : "au.csiro.pathling.schema.CompositeCtx.accept", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):DT", "kind" : "def"}, {"member" : "au.csiro.pathling.schema.CompositeCtx#<init>", "error" : "unsupported entity"}, {"label" : "compositeDefinition", "tail" : ": BaseRuntimeElementCompositeDefinition[_]", "member" : "au.csiro.pathling.schema.CompositeCtx.compositeDefinition", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/CompositeCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/schema\/CompositeCtx.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.schema.ElementChildCtx", "shortDescription" : "The visitor context representing a HAPI Child definition with a single element.", "members_case class" : [{"label" : "visitChildren", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.ElementChildCtx.visitChildren", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#visitChildren(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.ElementChildCtx.accept", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "def"}, {"member" : "au.csiro.pathling.schema.ElementChildCtx#<init>", "error" : "unsupported entity"}, {"label" : "compositeDefinition", "tail" : ": BaseRuntimeElementCompositeDefinition[_]", "member" : "au.csiro.pathling.schema.ElementChildCtx.compositeDefinition", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]", "kind" : "val"}, {"label" : "elementChildDefinition", "tail" : ": BaseRuntimeChildDefinition", "member" : "au.csiro.pathling.schema.ElementChildCtx.elementChildDefinition", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#elementChildDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/schema\/ElementChildCtx.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.schema.ElementCtx", "shortDescription" : "The visitor context representing a HAPI element definition.", "object" : "au\/csiro\/pathling\/schema\/ElementCtx$.html", "members_object" : [{"label" : "forExtension", "tail" : "(fhirContext: FhirContext): ElementCtx[DT, ST]", "member" : "au.csiro.pathling.schema.ElementCtx.forExtension", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#forExtension[DT,ST](fhirContext:ca.uhn.fhir.context.FhirContext):au.csiro.pathling.schema.ElementCtx[DT,ST]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ElementCtx$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.ElementCtx.accept", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "elementDefinition", "tail" : ": BaseRuntimeElementDefinition[_]", "member" : "au.csiro.pathling.schema.ElementCtx.elementDefinition", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#elementDefinition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_]", "kind" : "lazy val"}, {"member" : "au.csiro.pathling.schema.ElementCtx#<init>", "error" : "unsupported entity"}, {"label" : "compositeDefinition", "tail" : ": BaseRuntimeElementCompositeDefinition[_]", "member" : "au.csiro.pathling.schema.ElementCtx.compositeDefinition", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]", "kind" : "val"}, {"label" : "childDefinition", "tail" : ": BaseRuntimeChildDefinition", "member" : "au.csiro.pathling.schema.ElementCtx.childDefinition", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition", "kind" : "val"}, {"label" : "elementName", "tail" : ": String", "member" : "au.csiro.pathling.schema.ElementCtx.elementName", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#elementName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ElementCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/schema\/ElementCtx.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.schema.FieldVisitorCtxCtx", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.FieldVisitorCtxCtx.accept", "link" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):Seq[SF]", "kind" : "abstract def"}], "shortDescription" : "Base trait for visitor context that produce ST representations.", "trait" : "au\/csiro\/pathling\/schema\/FieldVisitorCtxCtx.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.schema.ResourceCtx", "shortDescription" : "The visitor context representing a HAPI Resource definition.", "members_case class" : [{"label" : "toCompositeCtx", "tail" : "(): CompositeCtx[DT, SF]", "member" : "au.csiro.pathling.schema.ResourceCtx.toCompositeCtx", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#toCompositeCtx:au.csiro.pathling.schema.CompositeCtx[DT,SF]", "kind" : "def"}, {"label" : "proceed", "tail" : "(visitor: SchemaVisitor[DT, SF]): DT", "member" : "au.csiro.pathling.schema.ResourceCtx.proceed", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#proceed(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):DT", "kind" : "def"}, {"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): DT", "member" : "au.csiro.pathling.schema.ResourceCtx.accept", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):DT", "kind" : "def"}, {"member" : "au.csiro.pathling.schema.ResourceCtx#<init>", "error" : "unsupported entity"}, {"label" : "resourceDefinition", "tail" : ": RuntimeResourceDefinition", "member" : "au.csiro.pathling.schema.ResourceCtx.resourceDefinition", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#resourceDefinition:ca.uhn.fhir.context.RuntimeResourceDefinition", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/ResourceCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/schema\/ResourceCtx.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.schema.SchemaVisitor", "members_trait" : [{"label" : "getOrderedListOfChoiceChildNames", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[String]", "member" : "au.csiro.pathling.schema.SchemaVisitor.getOrderedListOfChoiceChildNames", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#getOrderedListOfChoiceChildNames(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[String]", "kind" : "def"}, {"label" : "visitResource", "tail" : "(resourceCtx: ResourceCtx[DT, SF]): DT", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitResource", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#visitResource(resourceCtx:au.csiro.pathling.schema.ResourceCtx[DT,SF]):DT", "kind" : "def"}, {"label" : "visitComposite", "tail" : "(compositeCtx: CompositeCtx[DT, SF]): DT", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitComposite", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#visitComposite(compositeCtx:au.csiro.pathling.schema.CompositeCtx[DT,SF]):DT", "kind" : "def"}, {"label" : "visitChild", "tail" : "(childCtx: ChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitChild", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#visitChild(childCtx:au.csiro.pathling.schema.ChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "visitElementChild", "tail" : "(elementChildCtx: ElementChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitElementChild", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#visitElementChild(elementChildCtx:au.csiro.pathling.schema.ElementChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "visitChoiceChild", "tail" : "(choiceChildCtx: ChoiceChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitChoiceChild", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#visitChoiceChild(choiceChildCtx:au.csiro.pathling.schema.ChoiceChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getValidChoiceTypes", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[Class[_ <: IBase]]", "member" : "au.csiro.pathling.schema.SchemaVisitor.getValidChoiceTypes", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#getValidChoiceTypes(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[Class[_<:org.hl7.fhir.instance.model.api.IBase]]", "kind" : "abstract def"}, {"label" : "visitElement", "tail" : "(elementCtx: ElementCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitElement", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#visitElement(elementCtx:au.csiro.pathling.schema.ElementCtx[DT,SF]):Seq[SF]", "kind" : "abstract def"}, {"label" : "combineChoiceElements", "tail" : "(ctx: ChoiceChildCtx[DT, SF], seq: Seq[Seq[SF]]): Seq[SF]", "member" : "au.csiro.pathling.schema.SchemaVisitor.combineChoiceElements", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#combineChoiceElements(ctx:au.csiro.pathling.schema.ChoiceChildCtx[DT,SF],seq:Seq[Seq[SF]]):Seq[SF]", "kind" : "abstract def"}, {"label" : "aggregateComposite", "tail" : "(compositeCtx: CompositeCtx[DT, SF], sfs: Seq[SF]): DT", "member" : "au.csiro.pathling.schema.SchemaVisitor.aggregateComposite", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html#aggregateComposite(compositeCtx:au.csiro.pathling.schema.CompositeCtx[DT,SF],sfs:Seq[SF]):DT", "kind" : "abstract def"}], "shortDescription" : "A visitor for HAPI Fhir schema traversal.", "object" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html", "members_object" : [{"label" : "isSingular", "tail" : "(childDefinition: BaseRuntimeChildDefinition): Boolean", "member" : "au.csiro.pathling.schema.SchemaVisitor.isSingular", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#isSingular(childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition):Boolean", "kind" : "def"}, {"label" : "isCollection", "tail" : "(childDefinition: BaseRuntimeChildDefinition): Boolean", "member" : "au.csiro.pathling.schema.SchemaVisitor.isCollection", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#isCollection(childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition):Boolean", "kind" : "def"}, {"label" : "traverseComposite", "tail" : "(compositeDefinition: BaseRuntimeElementCompositeDefinition[_], visitor: SchemaVisitor[DT, SF]): DT", "member" : "au.csiro.pathling.schema.SchemaVisitor.traverseComposite", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#traverseComposite[DT,SF](compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_],visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):DT", "kind" : "def"}, {"label" : "traverseResource", "tail" : "(resourceDefinition: RuntimeResourceDefinition, visitor: SchemaVisitor[DT, SF]): DT", "member" : "au.csiro.pathling.schema.SchemaVisitor.traverseResource", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#traverseResource[DT,SF](resourceDefinition:ca.uhn.fhir.context.RuntimeResourceDefinition,visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):DT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/SchemaVisitor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "au\/csiro\/pathling\/schema\/SchemaVisitor.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.schema.TypeVisitorCtx", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "accept", "tail" : "(visitor: SchemaVisitor[DT, SF]): DT", "member" : "au.csiro.pathling.schema.TypeVisitorCtx.accept", "link" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html#accept(visitor:au.csiro.pathling.schema.SchemaVisitor[DT,SF]):DT", "kind" : "abstract def"}], "shortDescription" : "Base trait for visitor context that produce DT representations.", "trait" : "au\/csiro\/pathling\/schema\/TypeVisitorCtx.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.schema.VisitorCtx", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/schema\/VisitorCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base trait for all visitor contexts.", "trait" : "au\/csiro\/pathling\/schema\/VisitorCtx.html", "kind" : "trait"}], "au.csiro.pathling.encoders.terminology.ucum" : [{"name" : "au.csiro.pathling.encoders.terminology.ucum.Ucum", "shortDescription" : "Makes UCUM services available to the rest of the application.", "members_class" : [{"member" : "au.csiro.pathling.encoders.terminology.ucum.Ucum#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/encoders\/terminology\/ucum\/Ucum.html", "kind" : "class"}], "au.csiro.pathling.encoders.datatypes" : [{"name" : "au.csiro.pathling.encoders.datatypes.CustomCoder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "customDeserializer", "tail" : "(addToPath: (String) ⇒ Expression, isCollection: Boolean): Seq[ExpressionWithName]", "member" : "au.csiro.pathling.encoders.datatypes.CustomCoder.customDeserializer", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#customDeserializer(addToPath:String=>org.apache.spark.sql.catalyst.expressions.Expression,isCollection:Boolean):Seq[au.csiro.pathling.encoders.ExpressionWithName]", "kind" : "abstract def"}, {"label" : "customSerializer", "tail" : "(evaluator: ((Expression) ⇒ Expression) ⇒ Expression): Seq[ExpressionWithName]", "member" : "au.csiro.pathling.encoders.datatypes.CustomCoder.customSerializer", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#customSerializer(evaluator:(org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression)=>org.apache.spark.sql.catalyst.expressions.Expression):Seq[au.csiro.pathling.encoders.ExpressionWithName]", "kind" : "abstract def"}, {"label" : "schema", "tail" : "(arrayEncoder: Option[(DataType) ⇒ DataType]): Seq[StructField]", "member" : "au.csiro.pathling.encoders.datatypes.CustomCoder.schema", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html#schema(arrayEncoder:Option[org.apache.spark.sql.types.DataType=>org.apache.spark.sql.types.DataType]):Seq[org.apache.spark.sql.types.StructField]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "au\/csiro\/pathling\/encoders\/datatypes\/CustomCoder.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings", "members_trait" : [{"label" : "customEncoder", "tail" : "(elementDefinition: BaseRuntimeElementDefinition[_], elementName: String): Option[CustomCoder]", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.customEncoder", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#customEncoder(elementDefinition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_],elementName:String):Option[au.csiro.pathling.encoders.datatypes.CustomCoder]", "kind" : "def"}, {"label" : "dataTypeToUtf8Expr", "tail" : "(inputObject: Expression): Expression", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.dataTypeToUtf8Expr", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#dataTypeToUtf8Expr(inputObject:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getValidChoiceTypes", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[Class[_ <: IBase]]", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.getValidChoiceTypes", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#getValidChoiceTypes(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[Class[_<:org.hl7.fhir.instance.model.api.IBase]]", "kind" : "abstract def"}, {"label" : "primitiveDecoderExpression", "tail" : "(primitiveClass: Class[_ <: IPrimitiveType[_]], path: Option[Expression]): Expression", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.primitiveDecoderExpression", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#primitiveDecoderExpression(primitiveClass:Class[_<:org.hl7.fhir.instance.model.api.IPrimitiveType[_]],path:Option[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "abstract def"}, {"label" : "primitiveEncoderExpression", "tail" : "(inputObject: Expression, primitive: RuntimePrimitiveDatatypeDefinition): Expression", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.primitiveEncoderExpression", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#primitiveEncoderExpression(inputObject:org.apache.spark.sql.catalyst.expressions.Expression,primitive:ca.uhn.fhir.context.RuntimePrimitiveDatatypeDefinition):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "abstract def"}, {"label" : "skipField", "tail" : "(compositeDefinition: BaseRuntimeElementCompositeDefinition[_], child: BaseRuntimeChildDefinition): Boolean", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.skipField", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#skipField(compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_],child:ca.uhn.fhir.context.BaseRuntimeChildDefinition):Boolean", "kind" : "abstract def"}, {"label" : "overrideCompositeExpression", "tail" : "(inputObject: Expression, definition: BaseRuntimeElementCompositeDefinition[_]): Option[Seq[ExpressionWithName]]", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.overrideCompositeExpression", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#overrideCompositeExpression(inputObject:org.apache.spark.sql.catalyst.expressions.Expression,definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]):Option[Seq[au.csiro.pathling.encoders.ExpressionWithName]]", "kind" : "abstract def"}, {"label" : "baseType", "tail" : "(): Class[_ <: IBaseDatatype]", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.baseType", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#baseType():Class[_<:org.hl7.fhir.instance.model.api.IBaseDatatype]", "kind" : "abstract def"}, {"label" : "primitiveToDataType", "tail" : "(definition: RuntimePrimitiveDatatypeDefinition): DataType", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.primitiveToDataType", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html#primitiveToDataType(definition:ca.uhn.fhir.context.RuntimePrimitiveDatatypeDefinition):org.apache.spark.sql.types.DataType", "kind" : "abstract def"}], "shortDescription" : "Interface for mapping FHIR datatypes to Spark datatypes.", "trait" : "au\/csiro\/pathling\/encoders\/datatypes\/DataTypeMappings.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder", "shortDescription" : "Custom coder for DecimalType.", "object" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html", "members_object" : [{"label" : "zipToDecimal", "tail" : "(values: ArrayData, scales: ArrayData): Array[DecimalType]", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.zipToDecimal", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#zipToDecimal(values:org.apache.spark.sql.catalyst.util.ArrayData,scales:org.apache.spark.sql.catalyst.util.ArrayData):Array[org.hl7.fhir.r4.model.DecimalType]", "kind" : "def"}, {"label" : "decimalType", "tail" : ": DecimalType", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.decimalType", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#decimalType:org.apache.spark.sql.types.DecimalType", "kind" : "val"}, {"label" : "precision", "tail" : ": Int", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.precision", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#precision:Int", "kind" : "val"}, {"label" : "scale", "tail" : ": Int", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.scale", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#scale:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "schema", "tail" : "(arrayEncoder: Option[(DataType) ⇒ DataType]): Seq[StructField]", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.schema", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#schema(arrayEncoder:Option[org.apache.spark.sql.types.DataType=>org.apache.spark.sql.types.DataType]):Seq[org.apache.spark.sql.types.StructField]", "kind" : "def"}, {"label" : "customSerializer", "tail" : "(evaluator: ((Expression) ⇒ Expression) ⇒ Expression): Seq[ExpressionWithName]", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.customSerializer", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#customSerializer(evaluator:(org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression)=>org.apache.spark.sql.catalyst.expressions.Expression):Seq[au.csiro.pathling.encoders.ExpressionWithName]", "kind" : "def"}, {"label" : "customDeserializer", "tail" : "(addToPath: (String) ⇒ Expression, isCollection: Boolean): Seq[ExpressionWithName]", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.customDeserializer", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#customDeserializer(addToPath:String=>org.apache.spark.sql.catalyst.expressions.Expression,isCollection:Boolean):Seq[au.csiro.pathling.encoders.ExpressionWithName]", "kind" : "def"}, {"label" : "scaleFieldName", "tail" : ": String", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.scaleFieldName", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#scaleFieldName:String", "kind" : "val"}, {"label" : "primitiveClass", "tail" : "(): Class[DecimalType]", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.primitiveClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#primitiveClass:Class[org.hl7.fhir.r4.model.DecimalType]", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder#<init>", "error" : "unsupported entity"}, {"label" : "elementName", "tail" : ": String", "member" : "au.csiro.pathling.encoders.datatypes.DecimalCustomCoder.elementName", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#elementName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/datatypes\/DecimalCustomCoder.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder", "shortDescription" : "Custom coder for IdType.", "members_case class" : [{"label" : "schema", "tail" : "(arrayEncoder: Option[(DataType) ⇒ DataType]): Seq[StructField]", "member" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder.schema", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#schema(arrayEncoder:Option[org.apache.spark.sql.types.DataType=>org.apache.spark.sql.types.DataType]):Seq[org.apache.spark.sql.types.StructField]", "kind" : "def"}, {"label" : "customSerializer", "tail" : "(evaluator: ((Expression) ⇒ Expression) ⇒ Expression): Seq[ExpressionWithName]", "member" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder.customSerializer", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#customSerializer(evaluator:(org.apache.spark.sql.catalyst.expressions.Expression=>org.apache.spark.sql.catalyst.expressions.Expression)=>org.apache.spark.sql.catalyst.expressions.Expression):Seq[au.csiro.pathling.encoders.ExpressionWithName]", "kind" : "def"}, {"label" : "customDeserializer", "tail" : "(addToPath: (String) ⇒ Expression, isCollection: Boolean): Seq[ExpressionWithName]", "member" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder.customDeserializer", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#customDeserializer(addToPath:String=>org.apache.spark.sql.catalyst.expressions.Expression,isCollection:Boolean):Seq[au.csiro.pathling.encoders.ExpressionWithName]", "kind" : "def"}, {"label" : "versionedName", "tail" : ": String", "member" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder.versionedName", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#versionedName:String", "kind" : "val"}, {"label" : "primitiveClass", "tail" : "(): Class[IdType]", "member" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder.primitiveClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#primitiveClass:Class[org.hl7.fhir.r4.model.IdType]", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder#<init>", "error" : "unsupported entity"}, {"label" : "elementName", "tail" : ": String", "member" : "au.csiro.pathling.encoders.datatypes.IdCustomCoder.elementName", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#elementName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/datatypes\/IdCustomCoder.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings", "shortDescription" : "Data type mappings for FHIR STU3.", "object" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html", "members_class" : [{"label" : "getValidChoiceTypes", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[Class[_ <: IBase]]", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.getValidChoiceTypes", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#getValidChoiceTypes(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[Class[_<:org.hl7.fhir.instance.model.api.IBase]]", "kind" : "def"}, {"label" : "customEncoder", "tail" : "(elementDefinition: BaseRuntimeElementDefinition[_], elementName: String): Option[CustomCoder]", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.customEncoder", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#customEncoder(elementDefinition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_],elementName:String):Option[au.csiro.pathling.encoders.datatypes.CustomCoder]", "kind" : "def"}, {"label" : "primitiveDecoderExpression", "tail" : "(primitiveClass: Class[_ <: IPrimitiveType[_]], path: Option[Expression]): Expression", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.primitiveDecoderExpression", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#primitiveDecoderExpression(primitiveClass:Class[_<:org.hl7.fhir.instance.model.api.IPrimitiveType[_]],path:Option[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "primitiveEncoderExpression", "tail" : "(inputObject: Expression, primitive: RuntimePrimitiveDatatypeDefinition): Expression", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.primitiveEncoderExpression", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#primitiveEncoderExpression(inputObject:org.apache.spark.sql.catalyst.expressions.Expression,primitive:ca.uhn.fhir.context.RuntimePrimitiveDatatypeDefinition):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "skipField", "tail" : "(definition: BaseRuntimeElementCompositeDefinition[_], child: BaseRuntimeChildDefinition): Boolean", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.skipField", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#skipField(definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_],child:ca.uhn.fhir.context.BaseRuntimeChildDefinition):Boolean", "kind" : "def"}, {"label" : "overrideCompositeExpression", "tail" : "(inputObject: Expression, definition: BaseRuntimeElementCompositeDefinition[_]): Option[Seq[ExpressionWithName]]", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.overrideCompositeExpression", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#overrideCompositeExpression(inputObject:org.apache.spark.sql.catalyst.expressions.Expression,definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]):Option[Seq[au.csiro.pathling.encoders.ExpressionWithName]]", "kind" : "def"}, {"label" : "baseType", "tail" : "(): Class[_ <: IBaseDatatype]", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.baseType", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#baseType():Class[_<:org.hl7.fhir.instance.model.api.IBaseDatatype]", "kind" : "def"}, {"label" : "primitiveToDataType", "tail" : "(definition: RuntimePrimitiveDatatypeDefinition): DataType", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.primitiveToDataType", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#primitiveToDataType(definition:ca.uhn.fhir.context.RuntimePrimitiveDatatypeDefinition):org.apache.spark.sql.types.DataType", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings#<init>", "error" : "unsupported entity"}, {"label" : "dataTypeToUtf8Expr", "tail" : "(inputObject: Expression): Expression", "member" : "au.csiro.pathling.encoders.datatypes.DataTypeMappings.dataTypeToUtf8Expr", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#dataTypeToUtf8Expr(inputObject:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "isValidOpenElementType", "tail" : "(cls: Class[_ <: IBase]): Boolean", "member" : "au.csiro.pathling.encoders.datatypes.R4DataTypeMappings.isValidOpenElementType", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#isValidOpenElementType(cls:Class[_<:org.hl7.fhir.instance.model.api.IBase]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/encoders\/datatypes\/R4DataTypeMappings.html", "kind" : "class"}], "au.csiro.pathling.sql.types" : [{"name" : "au.csiro.pathling.sql.types.FlexiDecimal", "shortDescription" : "Implementation of flexible decimal type represented as the unscaled value with up to 38 digitsand the scale.", "members_class" : [{"member" : "au.csiro.pathling.sql.types.FlexiDecimal#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimal.html", "kind" : "class"}, {"name" : "au.csiro.pathling.sql.types.FlexiDecimalSupport", "shortDescription" : "Helper class for serialization of FlexiDecimals.", "object" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html", "members_object" : [{"label" : "createFlexiDecimalSerializer", "tail" : "(expression: Expression): Expression", "member" : "au.csiro.pathling.sql.types.FlexiDecimalSupport.createFlexiDecimalSerializer", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#createFlexiDecimalSerializer(expression:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "toLiteral", "tail" : "(value: BigDecimal): Column", "member" : "au.csiro.pathling.sql.types.FlexiDecimalSupport.toLiteral", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#toLiteral(value:java.math.BigDecimal):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/sql\/types\/FlexiDecimalSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "au.csiro.pathling.support.r4" : [{"name" : "au.csiro.pathling.support.r4.FhirTraversal", "shortDescription" : "A utility class for traversing FHIR resources.", "members_class" : [{"member" : "au.csiro.pathling.support.r4.FhirTraversal#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/support\/r4\/FhirTraversal.html", "kind" : "class"}, {"name" : "au.csiro.pathling.support.r4.R4FhirConversionSupport", "shortDescription" : "FhirConversionSupport implementation for FHIR R4.", "members_class" : [{"label" : "resolveReferences", "tail" : "(bundle: IBaseBundle): IBaseBundle", "member" : "au.csiro.pathling.support.r4.R4FhirConversionSupport.resolveReferences", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#resolveReferences(bundle:org.hl7.fhir.instance.model.api.IBaseBundle):org.hl7.fhir.instance.model.api.IBaseBundle", "kind" : "def"}, {"label" : "extractEntryFromBundle", "tail" : "(bundle: IBaseBundle, resourceClass: Class[T]): List[IBaseResource]", "member" : "au.csiro.pathling.support.r4.R4FhirConversionSupport.extractEntryFromBundle", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#extractEntryFromBundle[T<:org.hl7.fhir.instance.model.api.IBaseResource](bundle:org.hl7.fhir.instance.model.api.IBaseBundle,resourceClass:Class[T]):java.util.List[org.hl7.fhir.instance.model.api.IBaseResource]", "kind" : "def"}, {"label" : "fhirType", "tail" : "(base: IBase): String", "member" : "au.csiro.pathling.support.r4.R4FhirConversionSupport.fhirType", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#fhirType(base:org.hl7.fhir.instance.model.api.IBase):String", "kind" : "def"}, {"member" : "au.csiro.pathling.support.r4.R4FhirConversionSupport#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/support\/r4\/R4FhirConversionSupport.html", "kind" : "class"}], "au.csiro.pathling.encoders" : [{"name" : "au.csiro.pathling.encoders.AttachExtensions", "shortDescription" : "Attaches the Extensions from the provided fid->Extension map to objectsregistered in the _fid_mapping with RegisterFid.", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "au.csiro.pathling.encoders.AttachExtensions.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "au.csiro.pathling.encoders.AttachExtensions.doGenCode", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "au.csiro.pathling.encoders.AttachExtensions.eval", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "au.csiro.pathling.encoders.AttachExtensions.dataType", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "au.csiro.pathling.encoders.AttachExtensions.children", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.AttachExtensions.nullable", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#nullable:Boolean", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.AttachExtensions#<init>", "error" : "unsupported entity"}, {"label" : "extensionMapObject", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.AttachExtensions.extensionMapObject", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#extensionMapObject:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "targetObject", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.AttachExtensions.targetObject", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#targetObject:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.NonSQLExpression.sql", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#sql:String", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/AttachExtensions.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.Catalyst", "shortDescription" : "This class provides a compatibility layer for Spark Catalyst.", "object" : "au\/csiro\/pathling\/encoders\/Catalyst$.html", "members_object" : [{"label" : "staticInvoke", "tail" : "(staticObject: Class[_], dataType: DataType, functionName: String, arguments: Seq[Expression]): StaticInvoke", "member" : "au.csiro.pathling.encoders.Catalyst.staticInvoke", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#staticInvoke(staticObject:Class[_],dataType:org.apache.spark.sql.types.DataType,functionName:String,arguments:Seq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.objects.StaticInvoke", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/Catalyst$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "au.csiro.pathling.encoders.Deserializer", "members_trait" : [{"label" : "enumerationToDeserializer", "tail" : "(enumeration: RuntimeChildPrimitiveEnumerationDatatypeDefinition, path: Option[Expression]): Expression", "member" : "au.csiro.pathling.encoders.Deserializer.enumerationToDeserializer", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#enumerationToDeserializer(enumeration:ca.uhn.fhir.context.RuntimeChildPrimitiveEnumerationDatatypeDefinition,path:Option[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/Deserializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "au\/csiro\/pathling\/encoders\/Deserializer.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.encoders.DeserializerBuilder", "shortDescription" : "The builder of deserializer expressions for HAPI representation of FHIR resources.", "object" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html", "members_class" : [{"label" : "buildDeserializer", "tail" : "(resourceDefinition: RuntimeResourceDefinition): Expression", "member" : "au.csiro.pathling.encoders.DeserializerBuilder.buildDeserializer", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#buildDeserializer(resourceDefinition:ca.uhn.fhir.context.RuntimeResourceDefinition):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "buildDeserializer", "tail" : "(resourceClass: Class[T]): Expression", "member" : "au.csiro.pathling.encoders.DeserializerBuilder.buildDeserializer", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#buildDeserializer[T<:org.hl7.fhir.instance.model.api.IBaseResource](resourceClass:Class[T]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.DeserializerBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(schemaConverter: SchemaConverter): DeserializerBuilder", "member" : "au.csiro.pathling.encoders.DeserializerBuilder.apply", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#apply(schemaConverter:au.csiro.pathling.encoders.SchemaConverter):au.csiro.pathling.encoders.DeserializerBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/encoders\/DeserializerBuilder.html", "kind" : "class"}, {"name" : "au.csiro.pathling.encoders.EncoderBuilder", "shortDescription" : "Spark Encoder for FHIR data models.", "object" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html", "members_object" : [{"label" : "of", "tail" : "(resourceDefinition: RuntimeResourceDefinition, fhirContext: FhirContext, mappings: DataTypeMappings, maxNestingLevel: Int, openTypes: Set[String], enableExtensions: Boolean): ExpressionEncoder[_]", "member" : "au.csiro.pathling.encoders.EncoderBuilder.of", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#of(resourceDefinition:ca.uhn.fhir.context.RuntimeResourceDefinition,fhirContext:ca.uhn.fhir.context.FhirContext,mappings:au.csiro.pathling.encoders.datatypes.DataTypeMappings,maxNestingLevel:Int,openTypes:Set[String],enableExtensions:Boolean):org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[_]", "kind" : "def"}, {"label" : "UNSUPPORTED_RESOURCES", "tail" : ": Set[String]", "member" : "au.csiro.pathling.encoders.EncoderBuilder.UNSUPPORTED_RESOURCES", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#UNSUPPORTED_RESOURCES:Set[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "au.csiro.pathling.encoders.EncoderConfig", "shortDescription" : "Default implementation of EncoderSettings.", "object" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html", "members_object" : [{"label" : "apply", "tail" : "(maxNestingLevel: Int, openTypes: Set[String]): EncoderConfig", "member" : "au.csiro.pathling.encoders.EncoderConfig.apply", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#apply(maxNestingLevel:Int,openTypes:Set[String]):au.csiro.pathling.encoders.EncoderConfig", "kind" : "def"}, {"label" : "apply", "tail" : "(maxNestingLevel: Int, openTypes: Set[String], supportsExtensions: Boolean): EncoderConfig", "member" : "au.csiro.pathling.encoders.EncoderConfig.apply", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#apply(maxNestingLevel:Int,openTypes:Set[String],supportsExtensions:Boolean):au.csiro.pathling.encoders.EncoderConfig", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "au.csiro.pathling.encoders.EncoderConfig#<init>", "error" : "unsupported entity"}, {"label" : "generateFid", "tail" : ": Boolean", "member" : "au.csiro.pathling.encoders.EncoderConfig.generateFid", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#generateFid:Boolean", "kind" : "val"}, {"label" : "supportsExtensions", "tail" : ": Boolean", "member" : "au.csiro.pathling.encoders.EncoderConfig.supportsExtensions", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#supportsExtensions:Boolean", "kind" : "val"}, {"label" : "openTypes", "tail" : ": Set[String]", "member" : "au.csiro.pathling.encoders.EncoderConfig.openTypes", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#openTypes:Set[String]", "kind" : "val"}, {"label" : "maxNestingLevel", "tail" : ": Int", "member" : "au.csiro.pathling.encoders.EncoderConfig.maxNestingLevel", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#maxNestingLevel:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/EncoderConfig.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.EncoderContext", "members_trait" : [{"label" : "generateFid", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderContext.generateFid", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#generateFid:Boolean", "kind" : "def"}, {"label" : "supportsExtensions", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderContext.supportsExtensions", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#supportsExtensions:Boolean", "kind" : "def"}, {"label" : "openTypes", "tail" : "(): Set[String]", "member" : "au.csiro.pathling.encoders.EncoderContext.openTypes", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#openTypes:Set[String]", "kind" : "def"}, {"label" : "maxNestingLevel", "tail" : "(): Int", "member" : "au.csiro.pathling.encoders.EncoderContext.maxNestingLevel", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#maxNestingLevel:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "config", "tail" : "(): EncoderSettings", "member" : "au.csiro.pathling.encoders.EncoderContext.config", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#config:au.csiro.pathling.encoders.EncoderSettings", "kind" : "abstract def"}, {"label" : "dataTypeMappings", "tail" : "(): DataTypeMappings", "member" : "au.csiro.pathling.encoders.EncoderContext.dataTypeMappings", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#dataTypeMappings:au.csiro.pathling.encoders.datatypes.DataTypeMappings", "kind" : "abstract def"}, {"label" : "fhirContext", "tail" : "(): FhirContext", "member" : "au.csiro.pathling.encoders.EncoderContext.fhirContext", "link" : "au\/csiro\/pathling\/encoders\/EncoderContext.html#fhirContext:ca.uhn.fhir.context.FhirContext", "kind" : "abstract def"}], "shortDescription" : "Access to common objects required by schema processing operations.", "trait" : "au\/csiro\/pathling\/encoders\/EncoderContext.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.encoders.EncoderSettings", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "generateFid", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderSettings.generateFid", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#generateFid:Boolean", "kind" : "abstract def"}, {"label" : "supportsExtensions", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderSettings.supportsExtensions", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#supportsExtensions:Boolean", "kind" : "abstract def"}, {"label" : "openTypes", "tail" : "(): Set[String]", "member" : "au.csiro.pathling.encoders.EncoderSettings.openTypes", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#openTypes:Set[String]", "kind" : "abstract def"}, {"label" : "maxNestingLevel", "tail" : "(): Int", "member" : "au.csiro.pathling.encoders.EncoderSettings.maxNestingLevel", "link" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html#maxNestingLevel:Int", "kind" : "abstract def"}], "shortDescription" : "Configuration setting for encoders.", "trait" : "au\/csiro\/pathling\/encoders\/EncoderSettings.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.encoders.EncoderUtils", "shortDescription" : "", "object" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html", "members_object" : [{"label" : "arrayExpression", "tail" : "(array: Expression): StaticInvoke", "member" : "au.csiro.pathling.encoders.EncoderUtils.arrayExpression", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#arrayExpression(array:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.objects.StaticInvoke", "kind" : "def"}, {"label" : "defaultResolveAndBind", "tail" : "(expressionEncoder: ExpressionEncoder[T]): ExpressionEncoder[T]", "member" : "au.csiro.pathling.encoders.EncoderUtils.defaultResolveAndBind", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#defaultResolveAndBind[T](expressionEncoder:org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[T]):org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncoderUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "au.csiro.pathling.encoders.EncodingContext", "shortDescription" : "Provides a context for tracking nesting depth of element definition for encoders.", "object" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html", "members_object" : [{"label" : "withDefinition", "tail" : "(definition: BaseRuntimeElementCompositeDefinition[_])(body: ⇒ T): T", "member" : "au.csiro.pathling.encoders.EncodingContext.withDefinition", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#withDefinition[T](definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_])(body:=>T):T", "kind" : "def"}, {"label" : "runWithContext", "tail" : "(body: ⇒ T): T", "member" : "au.csiro.pathling.encoders.EncodingContext.runWithContext", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#runWithContext[T](body:=>T):T", "kind" : "def"}, {"label" : "currentNestingLevel", "tail" : "(definition: BaseRuntimeElementDefinition[_]): Int", "member" : "au.csiro.pathling.encoders.EncodingContext.currentNestingLevel", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#currentNestingLevel(definition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/EncodingContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "au.csiro.pathling.encoders.ExtensionSupport", "shortDescription" : "Helper class with constants related to FHIR extension support.", "object" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html", "members_object" : [{"label" : "EXTENSION_ELEMENT_NAME", "tail" : ": String", "member" : "au.csiro.pathling.encoders.ExtensionSupport.EXTENSION_ELEMENT_NAME", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#EXTENSION_ELEMENT_NAME:String", "kind" : "val"}, {"label" : "EXTENSIONS_FIELD_NAME", "tail" : ": String", "member" : "au.csiro.pathling.encoders.ExtensionSupport.EXTENSIONS_FIELD_NAME", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#EXTENSIONS_FIELD_NAME:String", "kind" : "val"}, {"label" : "FID_FIELD_NAME", "tail" : ": String", "member" : "au.csiro.pathling.encoders.ExtensionSupport.FID_FIELD_NAME", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#FID_FIELD_NAME:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/ExtensionSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "au.csiro.pathling.encoders.FhirEncoders", "shortDescription" : "Spark Encoders for FHIR Resources.", "members_class" : [{"label" : "getContext", "tail" : "(): FhirContext", "member" : "au.csiro.pathling.encoders.FhirEncoders.getContext", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#getContext():ca.uhn.fhir.context.FhirContext", "kind" : "def"}, {"label" : "getFhirVersion", "tail" : "(): FhirVersionEnum", "member" : "au.csiro.pathling.encoders.FhirEncoders.getFhirVersion", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#getFhirVersion():ca.uhn.fhir.context.FhirVersionEnum", "kind" : "def"}, {"label" : "of", "tail" : "(type: Class[T]): ExpressionEncoder[T]", "member" : "au.csiro.pathling.encoders.FhirEncoders.of", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#of[T<:org.hl7.fhir.instance.model.api.IBaseResource](type:Class[T]):org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[T]", "kind" : "final def"}, {"label" : "of", "tail" : "(resourceName: String): ExpressionEncoder[T]", "member" : "au.csiro.pathling.encoders.FhirEncoders.of", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#of[T<:org.hl7.fhir.instance.model.api.IBaseResource](resourceName:String):org.apache.spark.sql.catalyst.encoders.ExpressionEncoder[T]", "kind" : "final def"}, {"member" : "au.csiro.pathling.encoders.FhirEncoders#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/encoders\/FhirEncoders.html", "kind" : "class"}, {"name" : "au.csiro.pathling.encoders.GetClassFromContained", "shortDescription" : "An Expression extracting an object having the given class definition from a List of FHIRResources.", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "au.csiro.pathling.encoders.GetClassFromContained.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "au.csiro.pathling.encoders.GetClassFromContained.doGenCode", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "au.csiro.pathling.encoders.GetClassFromContained.eval", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "au.csiro.pathling.encoders.GetClassFromContained.dataType", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "au.csiro.pathling.encoders.GetClassFromContained.children", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.GetClassFromContained.nullable", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#nullable:Boolean", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.GetClassFromContained#<init>", "error" : "unsupported entity"}, {"label" : "containedClass", "tail" : ": Class[_]", "member" : "au.csiro.pathling.encoders.GetClassFromContained.containedClass", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#containedClass:Class[_]", "kind" : "val"}, {"label" : "targetObject", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.GetClassFromContained.targetObject", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#targetObject:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.NonSQLExpression.sql", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#sql:String", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/GetClassFromContained.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.GetHapiValue", "shortDescription" : "Gets value of an element of a HAPI object.", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "au.csiro.pathling.encoders.GetHapiValue.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "au.csiro.pathling.encoders.GetHapiValue.doGenCode", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "au.csiro.pathling.encoders.GetHapiValue.eval", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "au.csiro.pathling.encoders.GetHapiValue.children", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.GetHapiValue.nullable", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#nullable:Boolean", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.GetHapiValue#<init>", "error" : "unsupported entity"}, {"label" : "getMethod", "tail" : ": String", "member" : "au.csiro.pathling.encoders.GetHapiValue.getMethod", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#getMethod:String", "kind" : "val"}, {"label" : "hasMethod", "tail" : ": String", "member" : "au.csiro.pathling.encoders.GetHapiValue.hasMethod", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#hasMethod:String", "kind" : "val"}, {"label" : "dataType", "tail" : ": DataType", "member" : "au.csiro.pathling.encoders.GetHapiValue.dataType", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "val"}, {"label" : "value", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.GetHapiValue.value", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#value:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.NonSQLExpression.sql", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#sql:String", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/GetHapiValue.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.InstanceOf", "shortDescription" : "Determines if the given value is an instanceof a given class", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "au.csiro.pathling.encoders.InstanceOf.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "au.csiro.pathling.encoders.InstanceOf.doGenCode", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "au.csiro.pathling.encoders.InstanceOf.eval", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "au.csiro.pathling.encoders.InstanceOf.dataType", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "au.csiro.pathling.encoders.InstanceOf.children", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.InstanceOf.nullable", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#nullable:Boolean", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.InstanceOf#<init>", "error" : "unsupported entity"}, {"label" : "checkedType", "tail" : ": Class[_]", "member" : "au.csiro.pathling.encoders.InstanceOf.checkedType", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#checkedType:Class[_]", "kind" : "val"}, {"label" : "value", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.InstanceOf.value", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#value:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.NonSQLExpression.sql", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#sql:String", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/InstanceOf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/InstanceOf.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.ObjectCast", "shortDescription" : "Casts the result of an expression to another type.", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "au.csiro.pathling.encoders.ObjectCast.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "au.csiro.pathling.encoders.ObjectCast.doGenCode", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "au.csiro.pathling.encoders.ObjectCast.eval", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "au.csiro.pathling.encoders.ObjectCast.children", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "au.csiro.pathling.encoders.ObjectCast.dataType", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.ObjectCast.nullable", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#nullable:Boolean", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.ObjectCast#<init>", "error" : "unsupported entity"}, {"label" : "resultType", "tail" : ": DataType", "member" : "au.csiro.pathling.encoders.ObjectCast.resultType", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#resultType:org.apache.spark.sql.types.DataType", "kind" : "val"}, {"label" : "value", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.ObjectCast.value", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#value:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.NonSQLExpression.sql", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#sql:String", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/ObjectCast.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/ObjectCast.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.QuantitySupport", "shortDescription" : "Helper class for serialization of Quantities.", "object" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html", "members_object" : [{"label" : "createExtraSchemaFields", "tail" : "(): Seq[StructField]", "member" : "au.csiro.pathling.encoders.QuantitySupport.createExtraSchemaFields", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#createExtraSchemaFields():Seq[org.apache.spark.sql.types.StructField]", "kind" : "def"}, {"label" : "createExtraSerializers", "tail" : "(expression: Expression): Seq[(String, Expression)]", "member" : "au.csiro.pathling.encoders.QuantitySupport.createExtraSerializers", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#createExtraSerializers(expression:org.apache.spark.sql.catalyst.expressions.Expression):Seq[(String,org.apache.spark.sql.catalyst.expressions.Expression)]", "kind" : "def"}, {"label" : "CODE_CANONICALIZED_FIELD_NAME", "tail" : ": String", "member" : "au.csiro.pathling.encoders.QuantitySupport.CODE_CANONICALIZED_FIELD_NAME", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#CODE_CANONICALIZED_FIELD_NAME:String", "kind" : "val"}, {"label" : "VALUE_CANONICALIZED_FIELD_NAME", "tail" : ": String", "member" : "au.csiro.pathling.encoders.QuantitySupport.VALUE_CANONICALIZED_FIELD_NAME", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#VALUE_CANONICALIZED_FIELD_NAME:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/QuantitySupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "au.csiro.pathling.encoders.RegisterFid", "shortDescription" : "Registers the mapping of a deserialized object to its _fid value.", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "au.csiro.pathling.encoders.RegisterFid.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "au.csiro.pathling.encoders.RegisterFid.doGenCode", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "au.csiro.pathling.encoders.RegisterFid.eval", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "au.csiro.pathling.encoders.RegisterFid.dataType", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "au.csiro.pathling.encoders.RegisterFid.children", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.RegisterFid.nullable", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#nullable:Boolean", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.RegisterFid#<init>", "error" : "unsupported entity"}, {"label" : "fidValue", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.RegisterFid.fidValue", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#fidValue:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "targetObject", "tail" : ": Expression", "member" : "au.csiro.pathling.encoders.RegisterFid.targetObject", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#targetObject:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.NonSQLExpression.sql", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#sql:String", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/RegisterFid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/RegisterFid.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.SchemaConverter", "shortDescription" : "The converter from FHIR schemas to SQL schemas.", "members_class" : [{"label" : "resourceSchema", "tail" : "(resourceClass: Class[T]): StructType", "member" : "au.csiro.pathling.encoders.SchemaConverter.resourceSchema", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#resourceSchema[T<:org.hl7.fhir.instance.model.api.IBaseResource](resourceClass:Class[T]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "resourceSchema", "tail" : "(resourceDefinition: RuntimeResourceDefinition): StructType", "member" : "au.csiro.pathling.encoders.SchemaConverter.resourceSchema", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#resourceSchema(resourceDefinition:ca.uhn.fhir.context.RuntimeResourceDefinition):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.SchemaConverter#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": EncoderConfig", "member" : "au.csiro.pathling.encoders.SchemaConverter.config", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#config:au.csiro.pathling.encoders.EncoderConfig", "kind" : "val"}, {"label" : "dataTypeMappings", "tail" : ": DataTypeMappings", "member" : "au.csiro.pathling.encoders.SchemaConverter.dataTypeMappings", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#dataTypeMappings:au.csiro.pathling.encoders.datatypes.DataTypeMappings", "kind" : "val"}, {"label" : "fhirContext", "tail" : ": FhirContext", "member" : "au.csiro.pathling.encoders.SchemaConverter.fhirContext", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#fhirContext:ca.uhn.fhir.context.FhirContext", "kind" : "val"}, {"label" : "generateFid", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderContext.generateFid", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#generateFid:Boolean", "kind" : "def"}, {"label" : "supportsExtensions", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderContext.supportsExtensions", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#supportsExtensions:Boolean", "kind" : "def"}, {"label" : "openTypes", "tail" : "(): Set[String]", "member" : "au.csiro.pathling.encoders.EncoderContext.openTypes", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#openTypes:Set[String]", "kind" : "def"}, {"label" : "maxNestingLevel", "tail" : "(): Int", "member" : "au.csiro.pathling.encoders.EncoderContext.maxNestingLevel", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#maxNestingLevel:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/encoders\/SchemaConverter.html", "kind" : "class"}, {"name" : "au.csiro.pathling.encoders.SchemaProcessor", "members_trait" : [{"label" : "visitChild", "tail" : "(childCtx: ChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#visitChild(childCtx:au.csiro.pathling.schema.ChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "combineChoiceElements", "tail" : "(ctx: ChoiceChildCtx[DT, SF], seq: Seq[Seq[SF]]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.combineChoiceElements", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#combineChoiceElements(ctx:au.csiro.pathling.schema.ChoiceChildCtx[DT,SF],seq:Seq[Seq[SF]]):Seq[SF]", "kind" : "def"}, {"label" : "aggregateComposite", "tail" : "(compositeCtx: CompositeCtx[DT, SF], sfs: Seq[SF]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.aggregateComposite", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#aggregateComposite(compositeCtx:au.csiro.pathling.schema.CompositeCtx[DT,SF],sfs:Seq[SF]):DT", "kind" : "def"}, {"label" : "visitElement", "tail" : "(elementCtx: ElementCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitElement", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#visitElement(elementCtx:au.csiro.pathling.schema.ElementCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "visitElementChild", "tail" : "(elementChildCtx: ElementChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitElementChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#visitElementChild(elementChildCtx:au.csiro.pathling.schema.ElementChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "visitComposite", "tail" : "(compositeCtx: CompositeCtx[DT, SF]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitComposite", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#visitComposite(compositeCtx:au.csiro.pathling.schema.CompositeCtx[DT,SF]):DT", "kind" : "def"}, {"label" : "compositeBuilder", "tail" : "(compositeDefinition: BaseRuntimeElementCompositeDefinition[_]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.compositeBuilder", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#compositeBuilder(compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]):DT", "kind" : "def"}, {"label" : "proceedCompositeChildren", "tail" : "(value: CompositeCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.proceedCompositeChildren", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#proceedCompositeChildren(value:au.csiro.pathling.schema.CompositeCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "combineChoiceOptions", "tail" : "(choiceDefinition: RuntimeChildChoiceDefinition, optionValues: Seq[Seq[SF]]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.combineChoiceOptions", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#combineChoiceOptions(choiceDefinition:ca.uhn.fhir.context.RuntimeChildChoiceDefinition,optionValues:Seq[Seq[SF]]):Seq[SF]", "kind" : "def"}, {"label" : "getOrderedListOfChoiceChildNames", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[String]", "member" : "au.csiro.pathling.schema.SchemaVisitor.getOrderedListOfChoiceChildNames", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#getOrderedListOfChoiceChildNames(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[String]", "kind" : "def"}, {"label" : "visitResource", "tail" : "(resourceCtx: ResourceCtx[DT, SF]): DT", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitResource", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#visitResource(resourceCtx:au.csiro.pathling.schema.ResourceCtx[DT,SF]):DT", "kind" : "def"}, {"label" : "visitChoiceChild", "tail" : "(choiceChildCtx: ChoiceChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitChoiceChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#visitChoiceChild(choiceChildCtx:au.csiro.pathling.schema.ChoiceChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildComposite", "tail" : "(definition: BaseRuntimeElementCompositeDefinition[_], fields: Seq[SF]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.buildComposite", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#buildComposite(definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_],fields:Seq[SF]):DT", "kind" : "abstract def"}, {"label" : "shouldExpandChild", "tail" : "(definition: BaseRuntimeElementCompositeDefinition[_], childDefinition: BaseRuntimeChildDefinition): Boolean", "member" : "au.csiro.pathling.encoders.SchemaProcessor.shouldExpandChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#shouldExpandChild(definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_],childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition):Boolean", "kind" : "abstract def"}, {"label" : "buildValue", "tail" : "(childDefinition: BaseRuntimeChildDefinition, elementDefinition: BaseRuntimeElementDefinition[_], elementName: String): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.buildValue", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#buildValue(childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition,elementDefinition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_],elementName:String):Seq[SF]", "kind" : "abstract def"}, {"label" : "generateFid", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderSettings.generateFid", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#generateFid:Boolean", "kind" : "abstract def"}, {"label" : "supportsExtensions", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderSettings.supportsExtensions", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#supportsExtensions:Boolean", "kind" : "abstract def"}, {"label" : "openTypes", "tail" : "(): Set[String]", "member" : "au.csiro.pathling.encoders.EncoderSettings.openTypes", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#openTypes:Set[String]", "kind" : "abstract def"}, {"label" : "maxNestingLevel", "tail" : "(): Int", "member" : "au.csiro.pathling.encoders.EncoderSettings.maxNestingLevel", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#maxNestingLevel:Int", "kind" : "abstract def"}, {"label" : "getValidChoiceTypes", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[Class[_ <: IBase]]", "member" : "au.csiro.pathling.schema.SchemaVisitor.getValidChoiceTypes", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html#getValidChoiceTypes(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[Class[_<:org.hl7.fhir.instance.model.api.IBase]]", "kind" : "abstract def"}], "shortDescription" : "A specialized SchemaVisitor for building schema encoders and converters.", "trait" : "au\/csiro\/pathling\/encoders\/SchemaProcessor.html", "kind" : "trait"}, {"name" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings", "shortDescription" : "Default implementation of SchemaProcessor delegating relevant functionality to DataTypeMappings", "members_class" : [{"label" : "buildExtensionValue", "tail" : "(): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildExtensionValue", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildExtensionValue():DT", "kind" : "def"}, {"label" : "buildEnumPrimitive", "tail" : "(enumDefinition: RuntimePrimitiveDatatypeDefinition, enumChildDefinition: RuntimeChildPrimitiveEnumerationDatatypeDefinition): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildEnumPrimitive", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildEnumPrimitive(enumDefinition:ca.uhn.fhir.context.RuntimePrimitiveDatatypeDefinition,enumChildDefinition:ca.uhn.fhir.context.RuntimeChildPrimitiveEnumerationDatatypeDefinition):DT", "kind" : "def"}, {"label" : "buildSimpleValue", "tail" : "(childDefinition: BaseRuntimeChildDefinition, elementDefinition: BaseRuntimeElementDefinition[_], elementName: String): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildSimpleValue", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildSimpleValue(childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition,elementDefinition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_],elementName:String):DT", "kind" : "def"}, {"label" : "buildValue", "tail" : "(childDefinition: BaseRuntimeChildDefinition, elementDefinition: BaseRuntimeElementDefinition[_], elementName: String): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildValue", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildValue(childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition,elementDefinition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_],elementName:String):Seq[SF]", "kind" : "def"}, {"label" : "shouldExpandChild", "tail" : "(definition: BaseRuntimeElementCompositeDefinition[_], childDefinition: BaseRuntimeChildDefinition): Boolean", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.shouldExpandChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#shouldExpandChild(definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_],childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition):Boolean", "kind" : "def"}, {"label" : "getValidChoiceTypes", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[Class[_ <: IBase]]", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.getValidChoiceTypes", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#getValidChoiceTypes(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[Class[_<:org.hl7.fhir.instance.model.api.IBase]]", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings#<init>", "error" : "unsupported entity"}, {"label" : "generateFid", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderContext.generateFid", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#generateFid:Boolean", "kind" : "def"}, {"label" : "supportsExtensions", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.EncoderContext.supportsExtensions", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#supportsExtensions:Boolean", "kind" : "def"}, {"label" : "openTypes", "tail" : "(): Set[String]", "member" : "au.csiro.pathling.encoders.EncoderContext.openTypes", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#openTypes:Set[String]", "kind" : "def"}, {"label" : "maxNestingLevel", "tail" : "(): Int", "member" : "au.csiro.pathling.encoders.EncoderContext.maxNestingLevel", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#maxNestingLevel:Int", "kind" : "def"}, {"label" : "visitChild", "tail" : "(childCtx: ChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#visitChild(childCtx:au.csiro.pathling.schema.ChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "combineChoiceElements", "tail" : "(ctx: ChoiceChildCtx[DT, SF], seq: Seq[Seq[SF]]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.combineChoiceElements", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#combineChoiceElements(ctx:au.csiro.pathling.schema.ChoiceChildCtx[DT,SF],seq:Seq[Seq[SF]]):Seq[SF]", "kind" : "def"}, {"label" : "aggregateComposite", "tail" : "(compositeCtx: CompositeCtx[DT, SF], sfs: Seq[SF]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.aggregateComposite", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#aggregateComposite(compositeCtx:au.csiro.pathling.schema.CompositeCtx[DT,SF],sfs:Seq[SF]):DT", "kind" : "def"}, {"label" : "visitElement", "tail" : "(elementCtx: ElementCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitElement", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#visitElement(elementCtx:au.csiro.pathling.schema.ElementCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "visitElementChild", "tail" : "(elementChildCtx: ElementChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitElementChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#visitElementChild(elementChildCtx:au.csiro.pathling.schema.ElementChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "visitComposite", "tail" : "(compositeCtx: CompositeCtx[DT, SF]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.visitComposite", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#visitComposite(compositeCtx:au.csiro.pathling.schema.CompositeCtx[DT,SF]):DT", "kind" : "def"}, {"label" : "compositeBuilder", "tail" : "(compositeDefinition: BaseRuntimeElementCompositeDefinition[_]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.compositeBuilder", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#compositeBuilder(compositeDefinition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_]):DT", "kind" : "def"}, {"label" : "proceedCompositeChildren", "tail" : "(value: CompositeCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.proceedCompositeChildren", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#proceedCompositeChildren(value:au.csiro.pathling.schema.CompositeCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "combineChoiceOptions", "tail" : "(choiceDefinition: RuntimeChildChoiceDefinition, optionValues: Seq[Seq[SF]]): Seq[SF]", "member" : "au.csiro.pathling.encoders.SchemaProcessor.combineChoiceOptions", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#combineChoiceOptions(choiceDefinition:ca.uhn.fhir.context.RuntimeChildChoiceDefinition,optionValues:Seq[Seq[SF]]):Seq[SF]", "kind" : "def"}, {"label" : "getOrderedListOfChoiceChildNames", "tail" : "(choice: RuntimeChildChoiceDefinition): Seq[String]", "member" : "au.csiro.pathling.schema.SchemaVisitor.getOrderedListOfChoiceChildNames", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#getOrderedListOfChoiceChildNames(choice:ca.uhn.fhir.context.RuntimeChildChoiceDefinition):Seq[String]", "kind" : "def"}, {"label" : "visitResource", "tail" : "(resourceCtx: ResourceCtx[DT, SF]): DT", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitResource", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#visitResource(resourceCtx:au.csiro.pathling.schema.ResourceCtx[DT,SF]):DT", "kind" : "def"}, {"label" : "visitChoiceChild", "tail" : "(choiceChildCtx: ChoiceChildCtx[DT, SF]): Seq[SF]", "member" : "au.csiro.pathling.schema.SchemaVisitor.visitChoiceChild", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#visitChoiceChild(choiceChildCtx:au.csiro.pathling.schema.ChoiceChildCtx[DT,SF]):Seq[SF]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildPrimitiveDatatypeXhtmlHl7Org", "tail" : "(xhtmlHl7Org: RuntimePrimitiveDatatypeXhtmlHl7OrgDefinition): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildPrimitiveDatatypeXhtmlHl7Org", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildPrimitiveDatatypeXhtmlHl7Org(xhtmlHl7Org:ca.uhn.fhir.context.RuntimePrimitiveDatatypeXhtmlHl7OrgDefinition):DT", "kind" : "abstract def"}, {"label" : "buildPrimitiveDatatype", "tail" : "(primitive: RuntimePrimitiveDatatypeDefinition): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildPrimitiveDatatype", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildPrimitiveDatatype(primitive:ca.uhn.fhir.context.RuntimePrimitiveDatatypeDefinition):DT", "kind" : "abstract def"}, {"label" : "buildElement", "tail" : "(elementName: String, elementValue: DT, definition: BaseRuntimeElementDefinition[_]): SF", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildElement", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildElement(elementName:String,elementValue:DT,definition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_]):SF", "kind" : "abstract def"}, {"label" : "buildArrayValue", "tail" : "(childDefinition: BaseRuntimeChildDefinition, elementDefinition: BaseRuntimeElementDefinition[_], elementName: String): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessorWithTypeMappings.buildArrayValue", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildArrayValue(childDefinition:ca.uhn.fhir.context.BaseRuntimeChildDefinition,elementDefinition:ca.uhn.fhir.context.BaseRuntimeElementDefinition[_],elementName:String):DT", "kind" : "abstract def"}, {"label" : "config", "tail" : "(): EncoderSettings", "member" : "au.csiro.pathling.encoders.EncoderContext.config", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#config:au.csiro.pathling.encoders.EncoderSettings", "kind" : "abstract def"}, {"label" : "dataTypeMappings", "tail" : "(): DataTypeMappings", "member" : "au.csiro.pathling.encoders.EncoderContext.dataTypeMappings", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#dataTypeMappings:au.csiro.pathling.encoders.datatypes.DataTypeMappings", "kind" : "abstract def"}, {"label" : "fhirContext", "tail" : "(): FhirContext", "member" : "au.csiro.pathling.encoders.EncoderContext.fhirContext", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#fhirContext:ca.uhn.fhir.context.FhirContext", "kind" : "abstract def"}, {"label" : "buildComposite", "tail" : "(definition: BaseRuntimeElementCompositeDefinition[_], fields: Seq[SF]): DT", "member" : "au.csiro.pathling.encoders.SchemaProcessor.buildComposite", "link" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html#buildComposite(definition:ca.uhn.fhir.context.BaseRuntimeElementCompositeDefinition[_],fields:Seq[SF]):DT", "kind" : "abstract def"}], "class" : "au\/csiro\/pathling\/encoders\/SchemaProcessorWithTypeMappings.html", "kind" : "class"}, {"name" : "au.csiro.pathling.encoders.SerializerBuilder", "shortDescription" : "The builder of serializer expressions for HAPI representation of FHIR resources.", "object" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html", "members_class" : [{"label" : "buildSerializer", "tail" : "(resourceClass: Class[T]): Expression", "member" : "au.csiro.pathling.encoders.SerializerBuilder.buildSerializer", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#buildSerializer[T<:org.hl7.fhir.instance.model.api.IBaseResource](resourceClass:Class[T]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "buildSerializer", "tail" : "(resourceDefinition: RuntimeResourceDefinition): Expression", "member" : "au.csiro.pathling.encoders.SerializerBuilder.buildSerializer", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#buildSerializer(resourceDefinition:ca.uhn.fhir.context.RuntimeResourceDefinition):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"member" : "au.csiro.pathling.encoders.SerializerBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(context: EncoderContext): SerializerBuilder", "member" : "au.csiro.pathling.encoders.SerializerBuilder.apply", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#apply(context:au.csiro.pathling.encoders.EncoderContext):au.csiro.pathling.encoders.SerializerBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/SerializerBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/encoders\/SerializerBuilder.html", "kind" : "class"}, {"name" : "au.csiro.pathling.encoders.StaticField", "shortDescription" : "Invokes a static function, returning the result.", "members_case class" : [{"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "au.csiro.pathling.encoders.StaticField.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#withNewChildrenInternal(newChildren:IndexedSeq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "au.csiro.pathling.encoders.StaticField.doGenCode", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "au.csiro.pathling.encoders.StaticField.eval", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "au.csiro.pathling.encoders.StaticField.children", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.encoders.StaticField.nullable", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#nullable:Boolean", "kind" : "def"}, {"label" : "objectName", "tail" : ": String", "member" : "au.csiro.pathling.encoders.StaticField.objectName", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#objectName:String", "kind" : "val"}, {"member" : "au.csiro.pathling.encoders.StaticField#<init>", "error" : "unsupported entity"}, {"label" : "fieldName", "tail" : ": String", "member" : "au.csiro.pathling.encoders.StaticField.fieldName", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#fieldName:String", "kind" : "val"}, {"label" : "dataType", "tail" : ": DataType", "member" : "au.csiro.pathling.encoders.StaticField.dataType", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "val"}, {"label" : "staticObject", "tail" : ": Class[_]", "member" : "au.csiro.pathling.encoders.StaticField.staticObject", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#staticObject:Class[_]", "kind" : "val"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.NonSQLExpression.sql", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#sql:String", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/StaticField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/encoders\/StaticField.html", "kind" : "case class"}, {"name" : "au.csiro.pathling.encoders.UnsupportedResourceError", "shortDescription" : "Thrown when encoding is requested for an unsupported resource type.", "members_class" : [{"member" : "au.csiro.pathling.encoders.UnsupportedResourceError#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/encoders\/UnsupportedResourceError.html", "kind" : "class"}], "au.csiro.pathling" : [], "au.csiro.pathling.config" : [{"name" : "au.csiro.pathling.config.EncodingConfiguration", "shortDescription" : "Represents configuration specific to FHIR encoding.", "members_class" : [{"member" : "au.csiro.pathling.config.EncodingConfiguration#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "au\/csiro\/pathling\/config\/EncodingConfiguration.html", "kind" : "class"}], "au.csiro.pathling.encoders.terminology" : [], "au.csiro.pathling.sql" : [{"name" : "au.csiro.pathling.sql.PruneSyntheticFields", "shortDescription" : "An expression that removes all fields starting with '_' underscores from struct values.", "members_case class" : [{"label" : "prettyName", "tail" : "(): String", "member" : "au.csiro.pathling.sql.PruneSyntheticFields.prettyName", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#prettyName:String", "kind" : "def"}, {"label" : "nullSafeEval", "tail" : "(value: Any): Any", "member" : "au.csiro.pathling.sql.PruneSyntheticFields.nullSafeEval", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#nullSafeEval(value:Any):Any", "kind" : "def"}, {"label" : "withNewChildInternal", "tail" : "(newChild: Expression): Expression", "member" : "au.csiro.pathling.sql.PruneSyntheticFields.withNewChildInternal", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#withNewChildInternal(newChild:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "au.csiro.pathling.sql.PruneSyntheticFields.dataType", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "inputSchema", "tail" : ": DataType", "member" : "au.csiro.pathling.sql.PruneSyntheticFields.inputSchema", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#inputSchema:org.apache.spark.sql.types.DataType", "kind" : "lazy val"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "au.csiro.pathling.sql.PruneSyntheticFields.nullable", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#nullable:Boolean", "kind" : "def"}, {"member" : "au.csiro.pathling.sql.PruneSyntheticFields#<init>", "error" : "unsupported entity"}, {"label" : "child", "tail" : ": Expression", "member" : "au.csiro.pathling.sql.PruneSyntheticFields.child", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#child:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "nullSafeCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullSafeCodeGen", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#nullSafeCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "defineCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.defineCodeGen", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#defineCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.eval", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.foldable", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#foldable:Boolean", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.withNewChildrenInternal", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "final def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.mapChildren", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.children", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#children:Seq[T]", "kind" : "final lazy val"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "au\/csiro\/pathling\/sql\/PruneSyntheticFields.html", "kind" : "case class"}], "au.csiro.pathling.support" : [{"name" : "au.csiro.pathling.support.FhirConversionSupport", "shortDescription" : "Helper functions to allow code to convert FHIR resources independently of the FHIR version.", "members_class" : [{"member" : "au.csiro.pathling.support.FhirConversionSupport#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "resolveReferences", "tail" : "(bundle: IBaseBundle): IBaseBundle", "member" : "au.csiro.pathling.support.FhirConversionSupport.resolveReferences", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#resolveReferences(bundle:org.hl7.fhir.instance.model.api.IBaseBundle):org.hl7.fhir.instance.model.api.IBaseBundle", "kind" : "abstract def"}, {"label" : "extractEntryFromBundle", "tail" : "(bundle: IBaseBundle, resourceClass: Class[T]): List[IBaseResource]", "member" : "au.csiro.pathling.support.FhirConversionSupport.extractEntryFromBundle", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#extractEntryFromBundle[T<:org.hl7.fhir.instance.model.api.IBaseResource](bundle:org.hl7.fhir.instance.model.api.IBaseBundle,resourceClass:Class[T]):java.util.List[org.hl7.fhir.instance.model.api.IBaseResource]", "kind" : "abstract def"}, {"label" : "fhirType", "tail" : "(base: IBase): String", "member" : "au.csiro.pathling.support.FhirConversionSupport.fhirType", "link" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html#fhirType(base:org.hl7.fhir.instance.model.api.IBase):String", "kind" : "abstract def"}], "class" : "au\/csiro\/pathling\/support\/FhirConversionSupport.html", "kind" : "class"}], "au" : [], "au.csiro" : []};